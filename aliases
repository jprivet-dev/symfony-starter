#!/usr/bin/env bash
# Usage:
#   . aliases
# or
#   source aliases

# (G)REEN, (R)ED, (Y)ELLOW & RE(S)ET
G='\033[32m'
R='\033[31m'
Y='\033[33m'
S='\033[0m'

function makefile_create() {
    local name="${1}"
    local path="${2}"
    local overwritten=""

    if [ ! -f "${path}" ] && [ ! -d "${path}" ]; then
        printf " ${R}⨯${S} Skipping ${Y}${name}${S} alias for ${Y}make ${name}${S} (file or directory ${Y}${path}${S} not found)\n"
        return 1
    fi

    if alias "${name}" &>/dev/null; then
        overwritten=" (alias already exists and overwritten)"
    fi

    alias "${name}"="makefile_execute ${name}" &&
        printf " ${G}✔${S} Create ${G}${name}${S} alias for ${G}make ${name}${S}${overwritten}\n"
}

function makefile_execute() {
    local name="${1}"
    shift
    make "${name}" ARG="${*}"
}

function makefile_aliases() {
    printf "\n${Y}Aliases${S}"
    printf "\n${Y}-------${S}\n\n"

    for entry in "${@}"; do
        IFS=':' read -r alias_name check_path <<< "${entry}"
        if [ -z "${check_path}" ]; then
            check_path="."
        fi

        makefile_create "${alias_name}" "${check_path}"
    done

    printf "\nTo remove aliases, simply ${G}close and reopen your terminal${S}, or use ${Y}unalias <alias_name>${S} (e.g., 'unalias foo bar').\n"
}

# Add alias with its file/directory to check
makefile_aliases symfony:bin/console sf:bin/console php:compose.yaml composer:composer.json phpunit:bin/phpunit
